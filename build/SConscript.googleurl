# Copyright (c) 2006-2008 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')

env = env.Clone()

env.Prepend(
    CPPPATH = [
        '$ICU38_DIR/public/common',
        '$ICU38_DIR/public/i18n',
        '#/..',
    ],
)

env.Append(
    CPPDEFINES = [
        'U_STATIC_IMPLEMENTATION',
    ],
)

if env['PLATFORM'] == 'win32':
  env.Append(
      CCFLAGS = [
          '/TP',
      ],
  )

lib_input_files = [
    'src/gurl.cc',
    'src/url_canon_etc.cc',
    'src/url_canon_fileurl.cc',
    'src/url_canon_host.cc',
    'src/url_canon_icu.cc',
    'src/url_canon_internal.cc',
    'src/url_canon_ip.cc',
    'src/url_canon_mailtourl.cc',
    'src/url_canon_path.cc',
    'src/url_canon_pathurl.cc',
    'src/url_canon_query.cc',
    'src/url_canon_relative.cc',
    'src/url_canon_stdurl.cc',
    'src/url_parse.cc',
    'src/url_parse_file.cc',
    'src/url_util.cc',
]

env.ChromeStaticLibrary('googleurl', lib_input_files)

env_tests = env.Clone()

env_tests.Append(
    CPPPATH = [
        '$GTEST_DIR/include',
    ],
    CPPDEFINES = [
        'UNIT_TEST',
    ],
    LIBS = [
        'googleurl',
        'base',
        env_tests['ICU_LIBS'],  # TODO(sgk):  '$ICU_LIBS' when scons is fixed
        'gtest',
    ]
)

test_files = [
   'src/gurl_unittest.cc',
   'src/url_canon_unittest.cc',
   'src/url_parse_unittest.cc',
   'src/url_util_unittest.cc',
   # The version of gtest that googleurl uses provides a main() function; ours
   # doesn't so include our own main function.
   env_tests.ChromeObject('run_all_unittests',
                          '$OBJ_ROOT/base/run_all_unittests.cc'),
]

# The version of gtest that googleurl uses provides a main() function; ours
# doesn't so include our own main function.
gurl_unittests = env_tests.ChromeTestProgram('googleurl_unittests', test_files)

installed_gurl_unittests = env.Replicate('$MAIN_DIR/Hammer', gurl_unittests)

env.Alias('googleurl', installed_gurl_unittests)
