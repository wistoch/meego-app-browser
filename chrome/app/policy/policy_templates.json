{
# policy_templates.json - Metafile for policy templates
#
# This file is used as input to generate the following policy templates:
# ADM,ADMX+ADML,MCX/plist
#
# Policy templates are user interface definitions or documents about the
# policies that can be used to configure Chrome. Each policy is a name-value
# pair where the value has a given type. Chrome looks up the values using the
# names of the policies. In the user interface where the values can be set,
# related policies might appear together in policy groups. The grouping is not
# visible to Chrome.
#
# This file contains a list of policy groups. Each group contains a list
# of policies under the key 'policies'. If a policy does not belong to
# any groups then it should be placed in its own separate group. All the
# policies and all the groups must have unique names but it is not a problem
# to have a group and policy with the same name. Group names are in fact
# not exposed to Chrome at all.
#
# Each policy has a type. The currently implemented types:
#   'string' - a string value
#   'enum' - the user can select its value from a collection of items
#   'main' - a boolean value with additional semantics:
#     A group can have at most one main policy and it must have a value of true
#     if the policy group is enabled, false if the group is disabled or no
#     value if the policy is not specified. Chrome will see this policy no
#     differently than other policies, but depending on the platform, the GUI
#     of the templates might reflect the fact that these policies are 'main'.
#     For example on Windows this policy will be assigned to the Enable/Disable
#     buttons of the group, and if it is set to Disabled then other policies of
#     the group will not be visible to Chrome.
#   'list' - a list of string values
#
# Policy group descriptions, policy captions and similar texts are localized
# strings taken from the <message> nodes of the .grd file. Their name
# attributes are generated from the JSON keys.
# Each item (policy or group) may have a caption and/or a description. The
# exact use of these strings depends on the platform:
#   -On Windows the user sees a list of policy groups from which the pages of
#    groups can be opened, and the values of policies can be edited on those.
#   -Mac does not know about policy groups, the user sees a list of single
#    policies and the values of policies can be edited by clicking on them.
#   The source of the one-line texts that appear in the list of policies/groups:
#    -On Windows the group caption is shown for each group in the list.
#    -On Mac also the group caption is shown by default for each policy. But
#     if a policy caption is specified then it overrides the group caption.
#     (Note that the policy caption can only be omitted for policies of type
#     'main'.)
#   Descriptions:
#    -On Windows the user sees the group description on the page of each
#     group. In addition to this, the policy caption is shown for each
#     policy on the group page. (Except for 'main' policies, they have no
#     separate captions.)
#    -On Mac the user sees each policy on a separate page. By default the
#     group description is shown here, but if the policy description is
#     specified then it overrides the group caption.
#
# Generated grd names:
#   Each name has two parts: the second part is either CAPTION or DESC,
#   and the first part identifies the item the text applies to:
#   -For policy groups:
#     IDS_POLICY_GROUP_<NAME OF THE GROUP>
#     e.g. the name of the description of group Homepage:
#       IDS_POLICY_GROUP_HOMEPAGE_DESC
#   -For policies:
#     IDS_POLICY_<NAME OF THE POLICY>
#     e.g. the name of the caption of policy HomepageLocation:
#       IDS_POLICY_HOMEPAGELOCATION_CAPTION
#   -For enum items:
#     IDS_POLICY_ENUM_<NAME OF THE ITEM>
#     e.g. the name of the caption of ProxyServerDisabled:
#       IDS_POLICY_ENUM_PROXYSERVERDISABLED_CAPTION
#
# Annotations:
#   Each policy has metadata under the key 'annotations'. Currently only
#   the value of 'platforms' is used. It is a list enumerating the platforms
#   on which Chrome supports the given policy. In a given template, only
#   those policies are included that are compatible with the target OS of
#   that template.
#     Windows: ADM,ADMX,ADML
#     Mac: plist,plist_strings
#
  'policy_groups': [
    # The homepage-related policies are split into two groups, because if they
    # are in the same group, then Windows does not allow to set them undefined
    # independently of each other.
    {
      'name': 'HomepageLocation',
      'policies': [{
        'name':  'HomepageLocation',
        'type': 'string',
        'annotations': {
          'platforms': ['linux', 'mac', 'win'],
          'products': ['chrome'],
          'features': {'dynamic_refresh': 1},
        }
      }],
    },
    {
      'name': 'HomepageIsNewTabPage',
      'policies': [{
        'name': 'HomepageIsNewTabPage',
        'type': 'main',
        'annotations': {
          'platforms': ['linux', 'mac', 'win'],
          'products': ['chrome'],
          'features': {'dynamic_refresh': 1},
        }
      }],
    },
    {
      'name': 'ApplicationLocale',
      'policies': [{
        'name': 'ApplicationLocaleValue',
        'type': 'string',
        'annotations': {
          'platforms': ['win'],
          'products': ['chrome'],
          'features': {'dynamic_refresh': 0},
        }
      }]
    },
    {
      'name': 'AlternateErrorPagesEnabled',
      'policies': [{
        'name': 'AlternateErrorPagesEnabled',
        'type': 'main',
        'annotations': {
          'platforms': ['linux', 'mac', 'win'],
          'features': {'dynamic_refresh': 1},
        }
      }]
    },
    {
      'name': 'SearchSuggestEnabled',
      'policies': [{
        'name': 'SearchSuggestEnabled',
        'type': 'main',
        'annotations': {
          'platforms': ['linux', 'mac', 'win'],
          'products': ['chrome'],
          'features': {'dynamic_refresh': 1},
        }
      }],
    },
    {
      'name': 'DnsPrefetchingEnabled',
      'policies': [{
        'name': 'DnsPrefetchingEnabled',
        'type': 'main',
        'annotations': {
          'platforms': ['linux', 'mac', 'win'],
          'products': ['chrome'],
          'features': {'dynamic_refresh': 0},
        }
      }],
    },
    {
      'name': 'SafeBrowsingEnabled',
      'policies': [{
        'name': 'SafeBrowsingEnabled',
        'type': 'main',
        'annotations': {
          'platforms': ['linux', 'mac', 'win'],
          'products': ['chrome'],
          'features': {'dynamic_refresh': 0},
        }
      }]
    },
    {
      'name': 'MetricsReportingEnabled',
      'policies': [{
        'name': 'MetricsReportingEnabled',
        'type': 'main',
        'annotations': {
          'platforms': ['linux', 'mac', 'win'],
          'products': ['chrome'],
          'features': {'dynamic_refresh': 0},
        }
      }],
    },
    {
      'name': 'PasswordManagerEnabled',
      'policies': [{
        'name': 'PasswordManagerEnabled',
        'type': 'main',
        'annotations': {
          'platforms': ['linux', 'mac', 'win'],
          'products': ['chrome'],
          'features': {'dynamic_refresh': 1},
        }
      }]
    },
    {
      'name': 'PasswordManagerAllowShowPasswords',
      'policies': [{
        'name': 'PasswordManagerAllowShowPasswords',
        'type': 'main',
        'annotations': {
          'platforms': ['linux', 'mac', 'win'],
          'products': ['chrome'],
          'features': {'dynamic_refresh': 1},
        }
      }]
    },
    {
      'name' : 'AutoFillEnabled',
      'policies': [{
        'name': 'AutoFillEnabled',
        'type': 'main',
        'annotations': {
          'platforms': ['linux', 'mac', 'win'],
          'products': ['chrome'],
          'features': {'dynamic_refresh': 1},
        }
      }]
    },
    {
      'name': 'DisabledPlugins',
      'policies': [{
        'name': 'DisabledPlugins',
        'type': 'list',
        'annotations': {
          'platforms': ['linux', 'mac', 'win'],
          'products': ['chrome'],
          'features': {'dynamic_refresh': 1},
        }
      }]
    },
    {
      'name': 'SyncDisabled',
      'policies': [{
        'name': 'SyncDisabled',
        'type': 'main',
        'annotations': {
          'platforms': ['linux', 'mac', 'win'],
          'products': ['chrome'],
          'features': {'dynamic_refresh': 1},
        }
      }]
    },
    {
      'name': 'Proxy',
      'policies': [
        {
          'name': 'ProxyServerMode',
          'type': 'enum',
          'items': [
            {'name': 'ProxyServerDisabled', 'value': '0'},
            {'name': 'ProxyServerAutoDetect', 'value': '1'},
            {'name': 'ProxyServerManual', 'value': '2'},
            {'name': 'ProxyServerUseSystem', 'value': '3'},
          ],
          'annotations': {
            'platforms': ['linux', 'mac', 'win'],
            'products': ['chrome'],
            'features': {'dynamic_refresh': 0},
          }
        },
        {
          'name': 'ProxyServer',
          'type': 'string',
          'annotations': {
            'platforms': ['linux', 'mac', 'win'],
            'products': ['chrome'],
            'features': {'dynamic_refresh': 0},
          }
        },
        {
          'name': 'ProxyPacUrl',
          'type': 'string',
          'annotations': {
            'platforms': ['linux', 'mac', 'win'],
            'products': ['chrome'],
            'features': {'dynamic_refresh': 0},
          }
        },
        {
          'name': 'ProxyBypassList',
          'type': 'string',
          'annotations': {
            'platforms': ['linux', 'mac', 'win'],
            'products': ['chrome'],
            'features': {'dynamic_refresh': 0},
          }
        },
      ]
    },
    {
      'name': 'ExtensionInstallBlacklist',
      'policies': [{
        'name': 'ExtensionInstallBlacklist',
        'type': 'list',
        'annotations': {
          'platforms': ['linux', 'mac', 'win'],
          'products': ['chrome'],
          'features': {'dynamic_refresh': 1},
        }
      }]
    },
    {
      'name': 'ExtensionInstallWhitelist',
      'policies': [{
        'name': 'ExtensionInstallWhitelist',
        'type': 'list',
        'annotations': {
          'platforms': ['linux', 'mac', 'win'],
          'products': ['chrome'],
          'features': {'dynamic_refresh': 1},
        }
      }]
    },
    {
      'name': 'ShowHomeButton',
      'policies': [{
        'name': 'ShowHomeButton',
        'type': 'main',
        'annotations': {
          'platforms': ['linux', 'mac', 'win'],
          'products': ['chrome'],
          'features': {'dynamic_refresh': 1},
        }
      }]
    },
    {
      'name': 'RestoreOnStartup',
      'policies': [{
        'name': 'RestoreOnStartup',
        'type': 'enum',
        'items': [
          {'name': 'RestoreOnStartupIsNone', 'value': '0'},
          {'name': 'RestoreOnStartupIsLastSession', 'value': '1'},
          {'name': 'RestoreOnStartupIsURLs', 'value': '4'},
        ],
        'annotations': {
          'platforms': ['linux', 'mac', 'win'],
          'products': ['chrome'],
          'features': {'dynamic_refresh': 1},
        }
      },{
        'name': 'RestoreOnStartupURLs',
        'type': 'list',
        'annotations': {
          'platforms': ['linux', 'mac', 'win'],
          'products': ['chrome'],
          'features': {'dynamic_refresh': 1},
        }
      }]
    },
    {
      'name': 'ChromeFrameRendererSettings',
      'policies': [{
        'name': 'ChromeFrameRendererSettings',
        'type': 'enum',
        'items': [
            {'name': 'RenderInHost', 'value': '0'},
            {'name': 'RenderInChromeFrame', 'value': '1'},
        ],
        'annotations': {
          'platforms': ['win'],
          'products': ['chrome_frame'],
          'features': {'dynamic_refresh': 0},
        }
      }, {
        'name': 'RenderInChromeFrameList',
        'type': 'list',
        'annotations': {
          'platforms': ['win'],
          'products': ['chrome_frame'],
          'features': {'dynamic_refresh': 0},
        }
      }, {
        'name': 'RenderInHostList',
        'type': 'list',
        'annotations': {
          'platforms': ['win'],
          'products': ['chrome_frame'],
          'features': {'dynamic_refresh': 0},
        }
      }],
    },
  ],
  'placeholders': [
    # Note: keys $1 and $3 are reserved for Chromium and Chromium Frame.
    {
      'key': '$2',
      'value': 'http://www.chromium.org/developers/design-documents/network-settings#TOC-Command-line-options-for-proxy-sett'
    },
    {
      'key': '$4',
      'value': 'http://www.chromium.org/developers/how-tos/chrome-frame-getting-started'
    },
  ]
}
