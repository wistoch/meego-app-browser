# Copyright (c) 2006-2008 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')

env = env.Clone()


env.Prepend(
    CPPPATH = [
        '$TARGET_ROOT/grit_derived_sources',
        #'$OBJ_ROOT/google_update',
        '$OBJ_ROOT/chrome/tools/build/win',
        '$CHROME_SRC_DIR',
    ],
    CPPDEFINES = [
        'U_STATIC_IMPLEMENTATION',
        'USE_HUNSPELL',
        'HUNSPELL_CHROME_CLIENT',
        'LIBXML_STATIC',
        'PNG_USER_CONFIG',
        'CHROME_PNG_WRITE_SUPPORT',
    ],
    CCFLAGS = [
        '/TP',
    ],
)

env.Append(
    CPPPATH = [
        '$GTEST_DIR/include',

        '$GOOGLE_UPDATE_DIR',
        '$CHROME_DIR/third_party/hunspell/src/hunspell',
        '$CHROME_DIR/third_party/wtl/include',
        '$NPAPI_DIR',
        '$LIBXML_DIR/DerivedSources/include',
        '$LIBXML_DIR/include',
        '$ICU38_DIR/public/common',
        '$ICU38_DIR/public/i18n',
        '$CHROME_DIR/app',
        '$WEBKIT_DIR/build/localized_strings',
        '$ZLIB_DIR',
        '$SKIA_DIR/include',
        '$SKIA_DIR/include/corecg',
        '$SKIA_DIR/platform',
        '$LIBPNG_DIR',
        '$BREAKPAD_DIR/src',
    ],
)

input_files = [
    'about_chrome_view.cc',
    'blocked_popup_container.cc',
    'bookmark_bar_view.cc',
    'bookmark_bubble_view.cc',
    'bookmark_editor_view.cc',
    'bookmark_folder_tree_view.cc',
    'bookmark_manager_view.cc',
    'bookmark_table_view.cc',
    'bug_report_view.cc',
    'clear_browsing_data.cc',
    'constrained_window_impl.cc',
    'delay_view.cc',
    'dom_view.cc',
    'download_item_view.cc',
    'download_shelf_view.cc',
    'download_started_animation.cc',
    'download_tab_view.cc',
    'edit_keyword_controller.cc',
    'event_utils.cc',
    'external_protocol_dialog.cc',
    'find_bar_view.cc',
    'first_run_bubble.cc',
    'first_run_customize_view.cc',
    'first_run_view.cc',
    'first_run_view_base.cc',
    'frame/aero_glass_frame.cc',
    'frame/aero_glass_non_client_view.cc',
    'frame/browser_view.cc',
    'frame/browser_window_factory.cc',
    'frame/opaque_frame.cc',
    'frame/opaque_non_client_view.cc',
    'go_button.cc',
    'html_dialog_view.cc',
    'hung_renderer_view.cc',
    'hwnd_html_view.cc',
    'importer_lock_view.cc',
    'importer_view.cc',
    'importing_progress_view.cc',
    'info_bubble.cc',
    'infobars/infobar_container.cc',
    'infobars/infobars.cc',
    'input_window.cc',
    'keyword_editor_view.cc',
    'location_bar_view.cc',
    'login_view.cc',
    'new_profile_dialog.cc',
    'options/advanced_contents_view.cc',
    'options/advanced_page_view.cc',
    'options/content_page_view.cc',
    'options/cookies_view.cc',
    'options/fonts_languages_window_view.cc',
    'options/fonts_page_view.cc',
    'options/general_page_view.cc',
    'options/language_combobox_model.cc',
    'options/languages_page_view.cc',
    'options/options_group_view.cc',
    'options/options_page_view.cc',
    'options/options_window_view.cc',
    'page_info_window.cc',
    'password_manager_view.cc',
    'restart_message_box.cc',
    'sad_tab_view.cc',
    'select_profile_dialog.cc',
    'shelf_item_dialog.cc',
    'shell_dialogs.cc',
    'star_toggle.cc',
    'status_bubble.cc',
    'tabs/dragged_tab_controller.cc',
    'tabs/dragged_tab_view.cc',
    'tabs/hwnd_photobooth.cc',
    'tabs/tab.cc',
    'tabs/tab_renderer.cc',
    'tabs/tab_strip.cc',
    'tab_icon_view.cc',
    'tab_contents_container_view.cc',
    'theme_helpers.cc',
    'toolbar_star_toggle.cc',
    'toolbar_view.cc',
    'user_data_dir_dialog.cc',
]

if env.Bit('windows'):
  input_files.extend([
      'find_bar_win.cc',
  ])

env.ChromeStaticLibrary('browser_views', input_files)
