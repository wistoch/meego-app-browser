# Copyright 2008, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#    * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#    * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Import('env', 'env_res')

env = env.Clone()
env_res = env_res.Clone()


env_res.Append(
  CPPPATH = [
    "$TARGET_ROOT",
    ".",
    "#/..",
  ],
  RCFLAGS = [
    ["/l", "0x409"],
  ],
)


resources = [
    env_res.RES('setup.rc'),
    env_res.RES('../util/setup_strings.rc'),
]


env.Prepend(
    CPPPATH = [
        '../util',
        '$TARGET_ROOT',
        '.',
        '#/..',
    ],
    LINKFLAGS = [
        '/INCREMENTAL',
        '/DEBUG',

        '/DELAYLOAD:"dwmapi.dll"',
        '/DELAYLOAD:"uxtheme.dll"',

        '/OPT:NOWIN98',
        '/SUBSYSTEM:WINDOWS',
        '/MACHINE:X86',
        '/FIXED:No',

        '/safeseh',
        '/dynamicbase',
        '/ignore:4199',
        '/nxcompat',

        '/PDB:${TARGETS[1]}',
        '/MAP:${TARGETS[2]}',
    ],
    LIBS = [
        'shlwapi.lib',
        'msi.lib',
    ],
)

input_files = [
    'install.cc',
    'main.cc',
    'setup.cc',
    'setup_constants.cc',
    'uninstall.cc',
]

libs = [
    '../util/util.lib',
    '$BSPATCH_DIR/bspatch.lib',
    '$LZMA_SDK_DIR/lzma_sdk.lib',
    '$ICU38_DIR/icuuc.lib',
    '$CHROME_DIR/common/common.lib',
    '$BASE_DIR/base.lib',
]

exe = env.ChromeProgram(['setup',
                   'setup.pdb',
                   'setup.map'],
                  resources + input_files + libs)
i = env.Install('$TARGET_ROOT', exe)

env.Alias('chrome', i)


env.ChromeVersionRC('setup_exe_version.rc',
                    'setup_exe_version.rc.version',
                    PWD = env.Dir('.'))
