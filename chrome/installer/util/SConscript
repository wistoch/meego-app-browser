# Copyright 2008, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#    * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#    * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Import('env')

env = env.Clone()


env.Prepend(
    CPPPATH = [
        '$LZMA_SDK_DIR',
        '$CHROME_DIR/third_party/wtl/include',
        '$NPAPI_DIR',
        '$LIBXML_DIR/include',
        '$SKIA_DIR/include',
        '$SKIA_DIR/include/corecg',
        '$SKIA_DIR/platform',
        '$LIBPNG_DIR',
        '$ZLIB_DIR',
        '$BREAKPAD_DIR/src',
        '$LIBJPEG_DIR',
        '$ICU38_DIR/public/common',
        '$ICU38_DIR/public/i18n',
        '#/..',
        '.',
    ],
    CPPDEFINES = [
        "_LZMA_IN_CB",
        "LIBXML_STATIC",
        "PNG_USER_CONFIG",
        "CHROME_PNG_WRITE_SUPPORT"
        "U_STATIC_IMPLEMENTATION",
    ],
    CCFLAGS = [
        '/TP',
    ],
)

input_files = [
    '../../app/google_update_settings$OBJSUFFIX',
    'copy_tree_work_item.cc',
    'create_dir_work_item.cc',
    'create_reg_key_work_item.cc',
    'delete_tree_work_item.cc',
    'google_update_constants.cc',
    'google_update_settings.cc',
    'helper.cc',
    'install_util.cc',
    'l10n_string_util.cc',
    'logging_installer.cc',
    'lzma_util.cc',
    'set_reg_value_work_item.cc',
    'shell_util.cc',
    'util_constants.cc',
    'version.cc',
    'work_item.cc',
    'work_item_list.cc',
]

x = env.ChromeStaticLibrary('util', input_files)


# create_string_rc.py imports FP.py from the tools/grit/grit/extern
# directory, so add that to PYTHONPATH for this command execution.
env_x = env.Clone()
env_x.AppendENVPath('PYTHONPATH', [Dir('#/../tools/grit/grit/extern').abspath])
env_x.Command(['$CHROME_DIR/installer/util/setup_strings.rc',
               '$CHROME_DIR/installer/util/setup_strings.h'],
              ['$CHROME_DIR/installer/util/prebuild/create_string_rc.py',
               '$CHROME_DIR/app/generated_resources.grd'] +
               env.Glob('$CHROME_DIR/app/resources/*.xtb'),
              "$PYTHON ${SOURCES[0]} ${TARGET.dir}")
