# Copyright (c) 2006-2008 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')

env = env.Clone()

env.SConscript([
    '$CHROME_DIR/third_party/wtl/using_wtl.scons',
    '$GRIT_DIR/build/using_generated_resources.scons',
    '$ICU38_DIR/using_icu38.scons',
    '$NPAPI_DIR/using_npapi.scons',
    '$SKIA_DIR/using_skia.scons',
], {'env':env})

env.Prepend(
    CPPPATH = [
        '$CHROME_SRC_DIR',
    ],
)

if env.Bit('windows'):
  env.Prepend(
      CPPPATH = [
          '$CHROME_DIR/tools/build/win',
      ],
  )

input_files = [
    'about_handler.cc',
    'chrome_plugin_host.cc',
    'debug_message_handler.cc',
    'dom_ui_bindings.cc',
    'external_host_bindings.cc',
    'external_js_object.cc',
    'localized_error.cc',
    'plugin_channel_host.cc',
    'render_process.cc',
    'render_thread.cc',
    'render_view.cc',
    'render_widget.cc',
    'renderer_glue.cc',
    'renderer_main.cc',
    'user_script_slave.cc',
    'visitedlink_slave.cc',
    'webmediaplayer_delegate_impl.cc',
    'webplugin_delegate_proxy.cc',
    'automation/dom_automation_controller.cc',

    'net/render_dns_master.cc',
    'net/render_dns_queue.cc',
]

# TODO(port): Port these to Linux
if env.Bit('linux'):
  to_be_ported_files = [
      'chrome_plugin_host.cc',
      'debug_message_handler.cc',
      'external_js_object.cc',
      'net/render_dns_master.cc',
      'plugin_channel_host.cc',
      'render_process.cc',
      'render_thread.cc',
      'render_view.cc',
      'render_widget.cc',
      'renderer_glue.cc',
      'renderer_main.cc',
      'webplugin_delegate_proxy.cc',
  ]
  for remove in to_be_ported_files:
    input_files.remove(remove)

# TODO(port): Port these to Mac
if env.Bit('mac'):
  to_be_ported_files = [
      'chrome_plugin_host.cc',
      'debug_message_handler.cc',
      'external_js_object.cc',
      'net/render_dns_master.cc',
      'plugin_channel_host.cc',
      'render_process.cc',
      'render_thread.cc',
      'render_view.cc',
      'render_widget.cc',
      'renderer_glue.cc',
      'renderer_main.cc',
      'webplugin_delegate_proxy.cc',
  ]
  for remove in to_be_ported_files:
    input_files.remove(remove)


# TODO(port): Enable for Mac.
if not env.Bit('mac'):
  env.ChromeLibrary('renderer', input_files)

env.ChromeMSVSProject('$CHROME_DIR/renderer/renderer.vcproj',
                dependencies = [
                    '$CHROME_DIR/app/generated_resources.vcproj',
                ],
                guid='{9301A569-5D2B-4D11-9332-B1E30AEACB8D}')
