# Copyright (c) 2006-2008 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')

env = env.Clone()

env.ApplySConscript([
    '$CHROME_DIR/third_party/wtl/using_wtl.scons',
    '$CHROME_SRC_DIR/tools/grit/build/using_generated_resources.scons',
    '$SKIA_DIR/using_skia.scons',
])

env.Prepend(
    CPPPATH = [
        '$CHROME_SRC_DIR',
    ],
)

input_files = ChromeFileList([
    'autocomplete_edit_proxy.cc',
    'autocomplete_edit_proxy.h',
    'automation_constants.h',
    'automation_handle_tracker.cc',
    'automation_handle_tracker.h',
    'automation_messages.h',
    'automation_messages_internal.h',
    'automation_proxy.cc',
    'automation_proxy.h',
    'browser_proxy.cc',
    'browser_proxy.h',
    'constrained_window_proxy.cc',
    'constrained_window_proxy.h',
    'tab_proxy.cc',
    'tab_proxy.h',
    'window_proxy.cc',
    'window_proxy.h',
])

if not env.Bit('windows'):
  # TODO(port): port.
  input_files.Remove(
      'autocomplete_edit_proxy.cc',
      'constrained_window_proxy.cc',
      'tab_proxy.cc',
      'window_proxy.cc',
  )

env.ChromeLibrary('automation', input_files)

p = env.ChromeMSVSProject('automation.vcproj',
                          dest=('$CHROME_SRC_DIR/chrome/'
                                + 'test/automation/automation.vcproj'),
                          guid='{1556EF78-C7E6-43C8-951F-F6B43AC0DD12}',
                          # TODO(sgk):  when we can intuit the hierarchy
                          # from the built targets.
                          #buildtargets=TODO,
                          files=input_files,
                          relative_path_prefix='./',
                          tools=[
                              'VCPreBuildEventTool',
                              'VCCustomBuildTool',
                              'VCXMLDataGeneratorTool',
                              'VCWebServiceProxyGeneratorTool',
                              'VCMIDLTool',
                              'VCCLCompilerTool',
                              'VCManagedResourceCompilerTool',
                              'VCResourceCompilerTool',
                              'VCPreLinkEventTool',
                              'VCLibrarianTool',
                              'VCALinkTool',
                              'VCXDCMakeTool',
                              'VCBscMakeTool',
                              'VCFxCopTool',
                              'VCPostBuildEventTool',
                          ],
                          ConfigurationType='4')


p.AddConfig('Debug|Win32',
            InheritedPropertySheets=[
                '$(SolutionDir)../build/debug.vsprops',
                './automation.vsprops',
            ])

p.AddConfig('Release|Win32',
            InheritedPropertySheets=[
                '$(SolutionDir)../build/release.vsprops',
                './automation.vsprops',
            ])
