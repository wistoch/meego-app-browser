# Copyright (c) 2006-2008 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

__doc__ = """
Configuration for building the net_perftests{,.exe} executable.
"""

Import('env')

env = env.Clone()

env.ApplySConscript([
    '$BASE_DIR/using_base.scons',
    '$BZIP2_DIR/using_bzip2.scons',
    '$CHROME_SRC_DIR/build/using_googleurl.scons',
    '$GTEST_DIR/../using_gtest.scons',
    '$ICU38_DIR/using_icu38.scons',
    '$MODP_B64_DIR/using_modp_b64.scons',
    '$NET_DIR/using_net.scons',
])

if env.Bit('posix'):
  env.SConscript([
      '$LIBEVENT_DIR/using_libevent.scons',
  ], {'env':env})

if env.Bit('windows'):
  env.Prepend(
      CCFLAGS = [
          '/WX',
      ],
  )
elif env.Bit('linux'):
  env.Append(
      # TODO(port): disk_cache_perftest breaks strict aliasing rules.
      CCFLAGS = ['-fno-strict-aliasing'],
  )

input_files = ChromeFileList([
  # TODO(sgk):  violate standard indentation so we don't have to
  # reindent too much when we remove the explicit MSVSFilter() calls
  # in favor of generating the hierarchy to reflect the file system.
  MSVSFilter('support', [
    '../base/perftimer$OBJSUFFIX',
    '../base/run_all_perftests$OBJSUFFIX',
  ]),
  MSVSFilter('tests', [
    'base/cookie_monster_perftest.cc',
    'disk_cache/disk_cache_perftest.cc',
    'disk_cache/disk_cache_test_util$OBJSUFFIX',
  ]),
])

if not env.Bit('mac'):
  env.ChromeTestProgram('net_perftests', input_files)

env.ChromeMSVSProject('$NET_DIR/build/net_perftests.vcproj',
                guid='{AAC78796-B9A2-4CD9-BF89-09B03E92BF73}')

# TODO########################################################################

p = env.ChromeMSVSProject('$NET_DIR/build/net_perftests.vcproj',
                          dest='$CHROME_SRC_DIR/net/build/net_perftests.vcproj',
                          guid='{AAC78796-B9A2-4CD9-BF89-09B03E92BF73}',
                          dependencies = [
                              '$BASE_DIR/build/base.vcproj',
                              '$NET_DIR/build/net.vcproj',
                              '$MODP_B64_DIR/modp_b64.vcproj',
                              '$ICU38_DIR/build/icu.vcproj',
                              '$TESTING_DIR/gtest.vcproj',
                              '$GOOGLEURL_DIR/build/googleurl.vcproj',
                              '$SDCH_DIR/sdch.vcproj',
                          ],
                          # TODO: restore when we can derive all info,
                          # on all platforms, from the windows build targets.
                          #buildtargets=TODO,
                          files=input_files,
                          tools=[
                              'VCPreBuildEventTool',
                              'VCCustomBuildTool',
                              'VCXMLDataGeneratorTool',
                              'VCWebServiceProxyGeneratorTool',
                              'VCMIDLTool',
                              # TODO(sgk):  pull this from CPPDEFINES.
                              MSVSTool('VCCLCompilerTool',
                                       PreprocessorDefinitions='PERF_TEST'),
                              'VCManagedResourceCompilerTool',
                              'VCResourceCompilerTool',
                              'VCPreLinkEventTool',
                              'VCLinkerTool',
                              'VCALinkTool',
                              'VCManifestTool',
                              'VCXDCMakeTool',
                              'VCBscMakeTool',
                              'VCFxCopTool',
                              'VCAppVerifierTool',
                              'VCWebDeploymentTool',
                              'VCPostBuildEventTool',
                          ],
                          ConfigurationType='1')


p.AddConfig('Debug|Win32',
            InheritedPropertySheets=[
                '$(SolutionDir)../build/common.vsprops',
                '$(SolutionDir)../build/debug.vsprops',
                '$(SolutionDir)../testing/using_gtest.vsprops',
            ])

p.AddConfig('Release|Win32',
            InheritedPropertySheets=[
                '$(SolutionDir)../build/common.vsprops',
                '$(SolutionDir)../build/release.vsprops',
                '$(SolutionDir)../testing/using_gtest.vsprops',
            ])
