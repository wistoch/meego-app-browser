############################
# Chromium

{
  bug_15147
  ThreadSanitizer:Race
  ...
  fun:*URLRequestJobTracker*
}

{
  bug_21259
  ThreadSanitizer:Race
  ...
  fun:*tracked_objects*ThreadData*StartTracking*
}

{
  bug_21468
  ThreadSanitizer:Race
  ...
  fun:*net*DirectoryLister*
}

{
  bug_22272
  ThreadSanitizer:Race
  ...
  fun:*RefCounted*LoadLog*
}

{
  bug_22520
  ThreadSanitizer:Race
  fun:*CancelableRequestBase*
  fun:*CancelableRequest*
}

{
  bug_23244
  ThreadSanitizer:Race
  fun:event_*
  fun:event_*
}

{
  bug_23245
  ThreadSanitizer:Race
  fun:*base*Thread*ThreadMain*
}

{
  bug_23423
  ThreadSanitizer:Race
  fun:*IPC*SyncMessageC*E*
}

{
 bug_23433
 ThreadSanitizer:Race
 fun:*logging*SetMinLogLevel*
}

{
  bug_24307
  ThreadSanitizer:Race
  fun:*RefCounted*disk_cache*File*
}

{
  bug_24419
  ThreadSanitizer:Race
  fun:*BrowserProcessImpl*nspector*iles*
}

############################
# Data races in tests

# TODO(timurrrr): bug item
{
  Data race on bool in base/thread_unittest
  ThreadSanitizer:Race
  ...
  fun:*ToggleValue*Run*
}

# TODO(timurrrr): bug item
{
  Data race on bool in AssertReporter [test-only]
  ThreadSanitizer:Race
  ...
  fun:*AssertReporter*warn*
}

# TODO(timurrrr): bug item
{
  Data race on WatchdogCounter [test-only]
  ThreadSanitizer:Race
  ...
  fun:*WatchdogCounter*larm*
}

# TODO(timurrrr): bug item
{
  Data race on counter in WorkQueue [test-only]
  ThreadSanitizer:Race
  ...
  fun:*WorkQueue*
}

# TODO(timurrrr): bug item
{
  Data race on vfptr in base/watchdog_unittest
  ThreadSanitizer:Race
  ...
  fun:*WatchdogTest_*arm*Test_Test*TestBody*
}

# TODO(timurrrr): bug item
{
  Data race on vfptr in base/thread_unittest
  ThreadSanitizer:Race
  ...
  fun:*ThreadTest_SleepInsideInit*TestBody*
}

# TODO(timurrrr): bug item
{
  Data race on vfptr in ipc/ipc_sync_channel_unittest
  ThreadSanitizer:Race
  ...
  fun:*STLDeleteContainerPointers*Worker*
  ...
  fun:*IPCSyncChannelTest*
}

############################
# Benign races in ICU
{
  Two writes, same value (ICU gGlobalMutex, gMutexesInUse)
  ThreadSanitizer:Race
  fun:umtx_init_4_2
}

{
  Two writes, same value (ICU gHeapInUse)
  ThreadSanitizer:Race
  fun:uprv_malloc_4_2
}

############################
# Benign race in SQLLite
{
  Two writes, same value (SQLLite pthreadMutexAlloc)
  ThreadSanitizer:Race
  ...
  fun:pthreadMutexAlloc
  fun:sqlite3MutexAlloc
}

############################
# Benign races in libc
{
  Benign races in __lll_*lock_*_private
  ThreadSanitizer:Race
  fun:__lll_*lock_*_private
}

{
   fun:__tz*
   ThreadSanitizer:Race
   fun:__tz*
}

{
   fun:tzset*
   ThreadSanitizer:Race
   ...
   fun:tzset*
}
