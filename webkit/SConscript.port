# Copyright (c) 2006-2008 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')

env = env.Clone()

if env.Bit('windows'):
  env.Prepend(
    CCFLAGS = [
      '/TP',

      '/wd4244',
      '/wd4291',
      '/wd4345',
      '/wd4521',
      '/wd4800',
      ],)
elif env.Bit('linux'):
  env.Append(
      # For the image readers and decoders:
      CXXFLAGS = ["-Wno-sign-compare"],
      LIBS = ['png'],
  )

input_files = [
    '$PORT_DIR/bridge/chromium/PluginsChromium.cpp',

    '$PORT_DIR/page/Location.cpp',
    '$PORT_DIR/page/chromium/AccessibilityObjectChromium.cpp',
    '$PORT_DIR/page/chromium/AXObjectCacheChromium.cpp',
    '$PORT_DIR/page/chromium/DragControllerChromium.cpp',
    '$PORT_DIR/page/chromium/EventHandlerChromium.cpp',
    '$PORT_DIR/page/chromium/FrameChromium.cpp',

    '$PORT_DIR/platform/image-decoders/bmp/BMPImageDecoder.cpp',
    '$PORT_DIR/platform/image-decoders/bmp/BMPImageReader.cpp',
    '$PORT_DIR/platform/image-decoders/gif/GIFImageDecoder.cpp',
    '$PORT_DIR/platform/image-decoders/gif/GIFImageReader.cpp',
    '$PORT_DIR/platform/image-decoders/ico/ICOImageDecoder.cpp',
    '$PORT_DIR/platform/image-decoders/jpeg/JPEGImageDecoder.cpp',
    '$PORT_DIR/platform/image-decoders/png/PNGImageDecoder.cpp',
    '$PORT_DIR/platform/image-decoders/xbm/XBMImageDecoder.cpp',
]

if env.Bit('mac'):
  # Mac specific implementations.
  input_files.extend([
    '$PORT_DIR/platform/graphics/mac/FontCacheMacPending.cpp',
    '$PORT_DIR/rendering/RenderThemeMac.mm',
  ])

  # Remove from the list files that haven't yet been made portable to Mac.
  to_be_ported_files = [
    '$PORT_DIR/page/chromium/AXObjectCacheChromium.cpp',
    '$PORT_DIR/page/chromium/EventHandlerChromium.cpp',
  ]
  input_files = list(set(input_files) - set(to_be_ported_files))

if env.get('KJS'):
  input_files.extend([
    '$PORT_DIR/bridge/KJSBridge.cpp',
    '$PORT_DIR/bridge/ScriptControllerKJS.cpp',
  ])
else:
  input_files.extend([
    '$PORT_DIR/bindings/v8/ScriptController.cpp',
  ])

env.ChromeStaticLibrary("port", input_files)

env.ChromeMSVSProject('$WEBKIT_DIR/build/port/port.vcproj',
                name = 'Port',
                dependencies = [
                    '$WEBKIT_DIR/build/JSConfig/V8Config.vcproj',
                    '$WEBKIT_DIR/build/V8Bindings/V8Bindings_prebuild.vcproj',
                ],
                guid='{5597AD47-3494-4750-A235-4F9C2F864700}')
