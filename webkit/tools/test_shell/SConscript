# Copyright 2008, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#    * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#    * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Import('env', 'env_res')

env = env.Clone()
env_res = env_res.Clone()

env_res.Append(
    CPPPATH = [
        '.',
        '#/..',
        '$NET_DIR',
    ],
    RCFLAGS = [
        ['/l', '0x409'],
    ],
)

input_files = [
    'drag_delegate.cc',
    'drop_delegate.cc',
    'event_sending_controller.cc',
    'layout_test_controller.cc',
    'simple_resource_loader_bridge.cc',
    'test_navigation_controller.cc',
    'test_shell.cc',
    'test_shell_switches.cc',
    'test_shell_request_context.cc',
    'test_webview_delegate.cc',
    'text_input_controller.cc',
    'webview_host.cc',
    'webwidget_host.cc',
    'temp/navigation_controller_base.cc',
]

env.Append(
    CPPPATH = [
        '$BREAKPAD_DIR/src',
        '$WEBKIT_DIR/glue',
        '$GTEST_DIR/include',
    ],
    CCFLAGS = [
        '/TP',
        '/WX',
        '/Wp64',
    ],

    LIBS = [
        'comctl32.lib',
        'shlwapi.lib',
        'rpcrt4.lib',
        'winmm.lib',
        'wininet.lib',
        'version.lib',
        'msimg32.lib',
        'ws2_32.lib',
        'usp10.lib',
        'psapi.lib',
        'kernel32.lib',
        'user32.lib',
        'gdi32.lib',
        'winspool.lib',
        'comdlg32.lib',
        'advapi32.lib',
        'shell32.lib',
        'ole32.lib',
        'oleaut32.lib',
        'uuid.lib',
        'odbc32.lib',
        'odbccp32.lib',

        'delayimp.lib',
    ],

    LINKFLAGS = [
        '/DELAYLOAD:"ws2_32.dll"',
        '/DELAYLOAD:"dwmapi.dll"',
        '/DELAYLOAD:"uxtheme.dll"',
        '/FIXED:No',
        '/SUBSYSTEM:CONSOLE',
        '/MACHINE:X86',
        '/safeseh',
        '/dynamicbase',
        '/ignore:4199',
        '/nxcompat',
    ],
)

lib = env.ChromeStaticLibrary('test_shell', input_files)




resources = [
    env_res.RES('resources/test_shell.rc'),
    '$NET_DIR/net_resources.res',
    '$WEBKIT_DIR/build/localized_strings/webkit_strings_en-US.res',
]

components = [
    lib,

    '$BASE_DIR/base.lib',
    '$BASE_DIR/gfx/base_gfx.lib',
    '$BREAKPAD_DIR/breakpad_handler.lib',
    '$BREAKPAD_DIR/breakpad_sender.lib',
    '$GOOGLEURL_DIR/googleurl.lib',
    '$NET_DIR/net.lib',
    '$SKIA_DIR/skia.lib',
    '$TESTING_DIR/gtest.lib',
    '$BZIP2_DIR/bzip2.lib',
    '$ICU38_DIR/icuuc.lib',
    '$LIBJPEG_DIR/libjpeg.lib',
    '$LIBPNG_DIR/libpng.lib',
    '$LIBXML_DIR/libxml.lib',
    '$LIBXSLT_DIR/libxslt.lib',
    '$MODP_B64_DIR/modp_b64.lib',
    '$ZLIB_DIR/zlib.lib',
    '$V8_DIR/v8.lib',
    '$V8_DIR/snapshot-empty.obj',
    '$WEBKIT_DIR/JavaScriptCore_pcre.lib',
    '$WEBKIT_DIR/Port.lib',
    '$WEBKIT_DIR/activex_shim/activex_shim.lib',
    '$WEBKIT_DIR/build/JavaScriptCore/WTF.lib',
    '$WEBKIT_DIR/build/V8Bindings/V8Bindings.lib',
    '$WEBKIT_DIR/build/WebCore/WebCore.lib',
    '$WEBKIT_DIR/default_plugin/default_plugin.lib',
    '$WEBKIT_DIR/glue/Glue.lib',
]

test_shell = env.ChromeProgram(['test_shell.exe',
                          'test_shell.ilk',
                          'test_shell.pdb'],
                         components + resources +
                         ['test_shell_main.cc'])
i = env.Install('$TARGET_ROOT', test_shell)
env.Alias('webkit', i)

# This call can NOT use $WEBKIT_DIR because we need to copy
# directly from the source location.
i = env.Install('$TARGET_ROOT', '#/../webkit/tools/test_shell/resources/fonts')
env.Alias('webkit', i)

env.Depends(test_shell, '$V8_DIR/vc80.pdb')


test_files = [
    'drag_delegate.cc',
    'drop_delegate.cc',
    'event_sending_controller.cc',
    'image_decoder_unittest.cc',
    'keyboard_unittest.cc',
    'layout_test_controller.cc',
    'layout_test_controller_unittest.cc',
    'node_leak_test.cc',
    'plugin_tests.cc',
    'run_all_tests.cc',
    'simple_resource_loader_bridge.cc',
    'temp/navigation_controller_base.cc',
    'test_navigation_controller.cc',
    'test_shell.cc',
    'test_shell_request_context.cc',
    'test_shell_switches.cc',
    'test_shell_test.cc',
    'test_webview_delegate.cc',
    'text_input_controller.cc',
    'text_input_controller_unittest.cc',
    'webview_host.cc',
    'webwidget_host.cc',
    '$WEBKIT_DIR/glue/autocomplete_input_listener_unittest.cc',
    '$WEBKIT_DIR/glue/bookmarklet_unittest.cc',
    '$WEBKIT_DIR/glue/context_menu_unittest.cc',
    '$WEBKIT_DIR/glue/cpp_bound_class_unittest.cc',
    '$WEBKIT_DIR/glue/cpp_variant_unittest.cc',
    '$WEBKIT_DIR/glue/dom_operations_unittest.cc',
    '$WEBKIT_DIR/glue/dom_serializer_unittest.cc',
    '$WEBKIT_DIR/glue/glue_serialize_unittest.cc',
    '$WEBKIT_DIR/glue/iframe_redirect_unittest.cc',
    '$WEBKIT_DIR/glue/mimetype_unittest.cc',
    '$WEBKIT_DIR/glue/multipart_response_delegate_unittest.cc',
    '$WEBKIT_DIR/glue/password_autocomplete_listener_unittest.cc',
    '$WEBKIT_DIR/glue/regular_expression_unittest.cc',
    '$WEBKIT_DIR/glue/resource_fetcher_unittest.cc',
    # Commented out until a regression is fixed and this file is restored.
    #'$WEBKIT_DIR/glue/stringimpl_unittest.cc',
    '$WEBKIT_DIR/glue/webplugin_impl_unittest.cc',
    '$WEBKIT_DIR/port/platform/GKURL_unittest.cpp',
    '$WEBKIT_DIR/port/platform/image-decoders/bmp/BMPImageDecoder_unittest.cpp',
    '$WEBKIT_DIR/port/platform/image-decoders/ico/ICOImageDecoder_unittest.cpp',
    '$WEBKIT_DIR/port/platform/image-decoders/xbm/XBMImageDecoder_unittest.cpp',
]

test_shell_tests = env.ChromeTestProgram(['test_shell_tests',
                                'test_shell_tests.ilk',
                                'test_shell_tests.pdb'],
                               components + resources + test_files)
i = env.Install('$TARGET_ROOT', test_shell_tests)
env.Alias('webkit', i)
